@model Baby.Models.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
	 @Html.HiddenFor( model => model.OrganizationId );

    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor( model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" } )
        <div class="col-md-10">
            @Html.EditorFor( model => model.Surname, new { htmlAttributes = new { @class = "form-control" } } )
            @Html.ValidationMessageFor( model => model.Surname, "", new { @class = "text-danger" } )
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor( model => model.GivenNames, htmlAttributes: new { @class = "control-label col-md-2" } )
        <div class="col-md-10">
            @Html.EditorFor( model => model.GivenNames, new { htmlAttributes = new { @class = "form-control" } } )
            @Html.ValidationMessageFor( model => model.GivenNames, "", new { @class = "text-danger" } )
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor( m => m.UserName, new { @class = "col-md-2 control-label" } )
        <div class="col-md-10">
            @Html.TextBoxFor( m => m.UserName, new { @class = "form-control" } )
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor( m => m.Password, new { @class = "col-md-2 control-label" } )
        <div class="col-md-10">
            @Html.PasswordFor( m => m.Password, new { @class = "form-control" } )
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor( m => m.ConfirmPassword, new { @class = "col-md-2 control-label" } )
        <div class="col-md-10">
            @Html.PasswordFor( m => m.ConfirmPassword, new { @class = "form-control" } )
        </div>
    </div>

	<div class="form-group">
		@Html.LabelFor( model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" } )
		<div class="col-md-10">
			@Html.EditorFor( model => model.Email, new { htmlAttributes = new { @class = "form-control" } } )
			@Html.ValidationMessageFor( model => model.Email, "", new { @class = "text-danger" } )
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor( model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" } )
		<div class="col-md-10">
			@Html.EditorFor( model => model.Phone, new { htmlAttributes = new { @class = "form-control" } } )
			@Html.ValidationMessageFor( model => model.Phone, "", new { @class = "text-danger" } )
		</div>
	</div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render( "~/bundles/jqueryval" )
}
